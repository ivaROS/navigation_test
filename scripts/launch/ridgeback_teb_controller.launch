<launch>
  <arg name="use_recovery_behaviors" default="true"/>
  
  <arg name="egocircle" default="false"/>
  
  <arg name="converter" default="false" if="$(arg egocircle)"/>
  <arg name="converter" default="true" unless="$(arg egocircle)"/>
  
  <arg name="simple_exploration" default="false"/>

  <arg name="enable_visual" default="false"/>
  
  <arg name="vel_topic" default="/cmd_vel"/>
  
  <!-- <include file="$(find turtlebot_navigation)/launch/includes/velocity_smoother.launch.xml"/> -->

  <arg name="sensor_frame_id" default="camera_depth_frame"/>

  <arg name="image_to_use" default="egocylinder/image"/>
  <arg name="info_to_use" default="egocylinder/egocylinder_info"/>
  
  <arg name="use_provided_manager" default="false" />
  <arg name="provided_manager" default="camera/camera_nodelet_manager"/>
  <arg name="nodelet_manager" default="egocylindrical_nodelet_manager" unless="$(arg use_provided_manager)" />
  <arg name="nodelet_manager" default="$(arg provided_manager)" if="$(arg use_provided_manager)" />

  <arg name="depth_image" default="/realsense_plugin/depth/image_raw"/>
  <arg name="depth_info" default="/realsense_plugin/depth/camera_info"/>
  <arg name="fixed_frame_id" default="odom"/>
  <arg name="base_frame_id" default="base_link"/>

  <!-- <param name="/fixed_frame_id" value="map_static"/>
  <param name="/odom_frame_id" value="map_static"/> -->
  <param name="/base_frame_id" value="$(arg base_frame_id)"/>
  <param name="/sensor_frame_id" value="$(arg sensor_frame_id)"/>
  <!-- <param name="ego_circle_topic" value="/point_scan"/> -->

  <group ns="egocylinder">
    <node name="$(arg nodelet_manager)" pkg="nodelet" type="nodelet" args="manager" unless="$(arg use_provided_manager)" output="log" required="true">

    </node>

    <node name="depth_to_egocylindrical_nodelet" pkg="nodelet" type="nodelet" args="load egocylindrical/egocylindrical_propagator_nodelet $(arg nodelet_manager)" required="true">
     <!-- <remap from="/camera/depth/image_raw" to="$(arg depth_image)"/> -->
      <param name="vfov" value="3.141592654"/>
      <param name="image_in" value="$(arg depth_image)"/>
      <param name="info_in" value="$(arg depth_info)"/>
      <param name="points_out" value="data"/>
      <param name="filtered_points" value="filtered_points"/>
      <param name="fixed_frame_id" value="$(arg fixed_frame_id)"/>
      <param name="orientation_fixed_frame_id" value="$(arg base_frame_id)"/>
      <param name="origin_fixed_frame_id" value="$(arg sensor_frame_id)"/>
    </node>
    
    <node name="egocylindrical_to_pointcloud_nodelet" pkg="nodelet" type="nodelet" args="load egocylindrical/point_cloud_nodelet $(arg nodelet_manager)" required="true" if="$(arg enable_visual)">
      <remap from="egocylindrical_points" to="data"/>
      <remap from="cylindrical" to="points"/>
    </node>

    <node name="egocylindrical_to_projected_pointcloud_nodelet" pkg="nodelet" type="nodelet" args="load egocylindrical/projected_point_cloud_nodelet $(arg nodelet_manager)" required="true" if="$(arg enable_visual)">
      <remap from="egocylindrical_points" to="data"/>

    </node>
    
    <node name="egocylindrical_to_range_image_nodelet" pkg="nodelet" type="nodelet" args="load egocylindrical/range_image_nodelet $(arg nodelet_manager)" required="true">
      <remap from="egocylindrical_points" to="data"/>
      <param name="use_raw" value="False"/>
      <param name="image_topic" value="image"/>
    </node>

  </group>

  <group ns="egocylinder">

    <arg name="ec_im" default="image"/>
    <arg name="ec_info" default="egocylinder_info"/>


    <node name="egocylindrical_image_to_laserscan_node" pkg="egocylindrical_image_to_laserscan" type="egocylindrical_image_to_laserscan_node" >
      <remap from="image_in" to="$(arg ec_im)"/>
      <remap from="info_in" to="$(arg ec_info)"/>
      <remap from="camera_info" to="$(arg depth_info)"/>
      
      <param name="fixed_frame_id" value="$(arg fixed_frame_id)"/>
      <param name="scan_frame_id" value="egocan_stabilized"/>
      <param name="floor_dist" value="0.38"/>
      <param name="overhead_dist" value="0.2"/>
    </node>

  </group>

  <node name="egocircle_node" pkg="egocircle" type="ego_circle" if="$(arg egocircle)">
    <remap from="scan" to="/egocylinder/scan"/>
    <param name="base_frame_id" value="$(arg base_frame_id)"/>
  </node>  
  <arg name="global_planning_freq" default="$(optenv GM_PARAM_GLOBAL_PLANNING_FREQ 1)"/>
  <arg name="controller_freq" default="$(optenv GM_PARAM_CONTROLLER_FREQ 5)"/>

  <arg name="debug" default="false"/>

  <arg name="debug_prefix" value="" unless="$(arg debug)"/> <!-- valgrind - -tool=callgrind -->
  <arg name="debug_prefix" value="xterm -e gdb -ex run --args" if="$(arg debug)"/>

  <!-- xterm -e gdb -ex run - -args -->
  
  
  <env name="ROSCONSOLE_CONFIG_FILE" value="$(find nav_configs)/config/custom_teb_rosconsole.conf"/>

  <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen" clear_params="true" launch-prefix="$(arg debug_prefix)">
      <rosparam file="$(find quadruped_nav_benchmark)/config/quadruped_ridgeback_ego_teb/common_costmap_params_egocylinder_compensation.yaml" command="load" ns="global_costmap"/>
      <rosparam file="$(find quadruped_nav_benchmark)/config/quadruped_ridgeback_ego_teb/common_costmap_params_egocylinder_compensation.yaml" command="load" ns="local_costmap"/>
      <rosparam file="$(find quadruped_nav_benchmark)/config/quadruped_ridgeback_ego_teb/local_costmap_params.yaml" command="load"/>
      <rosparam file="$(find quadruped_nav_benchmark)/config/quadruped_ridgeback_ego_teb/global_costmap_params.yaml" command="load"/>

      <rosparam file="$(find nav_configs)/config/local_planner_common_params.yaml" command="load" ns="TebLocalPlannerROS"/>
      <rosparam file="$(find nav_configs)/config/move_base_params.yaml" command="load"/>
      <rosparam file="$(find nav_configs)/config/global_planner_params.yaml" command="load" ns="GlobalPlanner"/>

      <param name="recovery_behavior_enabled" value="false" unless="$(arg use_recovery_behaviors)"/>

      <param name="controller_frequency" value="$(arg controller_freq)" />
      <param name="planner_frequency" value="$(arg global_planning_freq)"/>

      <!-- <remap from="cmd_vel" to="navigation_velocity_smoother/raw_cmd_vel"/> -->
      <remap from="cmd_vel" to="$(arg vel_topic)"/>
      <!-- <remap from="/odom" to="/ground_truth/state"/> -->
      <remap from="/odom" to="/ground_truth/corrected_odom"/>


      <!-- Approach-specific parameters/remappings/etc -->
      <param name="base_local_planner" value="teb_local_planner/TebLocalPlannerROS" />

      <rosparam file="$(find quadruped_nav_benchmark)/config/quadruped_ridgeback_ego_teb/teb_local_planner_holonomic_params.yaml" command="load"/>
      <rosparam file="$(find nav_configs)/config/teb_costmap_converter_params.yaml" command="load" if="$(arg converter)"/>

      <param name="TebLocalPlannerROS/include_costmap_obstacles" value="false" if="$(arg egocircle)"/>
      <param name="TebLocalPlannerROS/include_egocircle_obstacles" value="$(arg egocircle)"/>
      <param name="TebLocalPlannerROS/gap_h_signature" value="$(arg egocircle)"/>
      <param name="TebLocalPlannerROS/gap_exploration" value="$(arg egocircle)"/>
      <param name="TebLocalPlannerROS/egocircle_feasibility" value="$(arg egocircle)"/>
      <param name="TebLocalPlannerROS/simple_exploration" value="$(arg simple_exploration)"/>
      <param name="TebLocalPlannerROS/weight_gap" value="0"/>
      <param name="TebLocalPlannerROS/gap_boundary_exponent" value="2" unless="$(arg egocircle)"/>
      <param name="TebLocalPlannerROS/feasibility_check_no_tebs" value="1" if="$(arg egocircle)"/>
      <param name="TebLocalPlannerROS/gap_theta_start" value="3.15"/>

      <!-- Disable the local costmap observation sources if they will not be used -->
      <param name="local_costmap/obstacle_layer/observation_sources" value="false" if="$(arg egocircle)"/>
  </node>





</launch>
