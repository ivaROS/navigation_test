<launch>
  <arg name="use_recovery_behaviors" default="true"/>

  <arg name="gap_exploration" default="$(optenv GM_PARAM_GAP_EXPLORATION true)"/>
  <arg name="gap_h_signature" default="$(optenv GM_PARAM_GAP_H_SIGNATURE true)"/>
  <arg name="simple_exploration" default="$(optenv GM_PARAM_SIMPLE_EXPLORATION false)"/>
  <arg name="global_planning_freq" default="$(optenv GM_PARAM_GLOBAL_PLANNING_FREQ 1)"/>
  <arg name="feasibility_check_no_poses" default="$(optenv GM_PARAM_FEASIBILITY_CHECK_NO_POSES 5)"/>
  <arg name="feasibility_check_no_tebs" default="$(optenv GM_PARAM_FEASIBILITY_CHECK_NO_TEBS 1)"/>
  <arg name="gap_boundary_threshold" default="$(optenv GM_PARAM_GAP_BOUNDARY_THRESHOLD .1)"/>
  <arg name="gap_boundary_ratio" default="$(optenv GM_PARAM_GAP_BOUNDARY_RATIO .2)"/>
  <arg name="gap_boundary_exponent" default="$(optenv GM_PARAM_GAP_BOUNDARY_EXPONENT 1)"/>
  <arg name="weight_gap" default="$(optenv GM_PARAM_WEIGHT_GAP 0)"/>

  <arg name="debug" default="false"/>

  <arg name="debug_prefix" value="" unless="$(arg debug)"/> <!-- valgrind - -tool=callgrind -->
  <arg name="debug_prefix" value="xterm -e gdb -ex run --args" if="$(arg debug)"/>

  <!-- xterm -e gdb -ex run - -args -->

  <node name="egocircle_node" pkg="egocircle" type="ego_circle"/>
  <include file="$(find turtlebot_navigation)/launch/includes/velocity_smoother.launch.xml"/>
  <env name="ROSCONSOLE_CONFIG_FILE" value="$(find nav_configs)/config/custom_teb_rosconsole.conf"/>

  <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen" clear_params="true" launch-prefix="$(arg debug_prefix)">
      <rosparam file="$(find nav_configs)/config/common_costmap_params.yaml" command="load" ns="global_costmap"/>
      <rosparam file="$(find nav_configs)/config/common_costmap_params.yaml" command="load" ns="local_costmap"/>
      <rosparam file="$(find nav_configs)/config/local_costmap_params.yaml" command="load"/>
      <rosparam file="$(find nav_configs)/config/global_costmap_params.yaml" command="load"/>


      
      <rosparam file="$(find nav_configs)/config/local_planner_common_params.yaml" command="load" ns="TebLocalPlannerROS"/>
      <rosparam file="$(find nav_configs)/config/move_base_params.yaml" command="load"/>
      
      <param name="recovery_behavior_enabled" value="false" unless="$(arg use_recovery_behaviors)"/>

      <param name="base_local_planner" value="teb_local_planner/TebLocalPlannerROS" />
      <rosparam file="$(find nav_configs)/config/teb_local_planner_params.yaml" command="load"/>
      
      <param name="TebLocalPlannerROS/include_costmap_obstacles" value="false"/>
      <param name="TebLocalPlannerROS/include_egocircle_obstacles" value="true"/>
      <param name="TebLocalPlannerROS/gap_h_signature" value="$(arg gap_h_signature)"/>
      <param name="TebLocalPlannerROS/gap_exploration" value="$(arg gap_exploration)"/>
      <param name="TebLocalPlannerROS/simple_exploration" value="false"/>
      <param name="TebLocalPlannerROS/egocircle_feasibility" value="true"/>

      <param name="TebLocalPlannerROS/weight_gap" value="$(arg weight_gap)"/>
      <param name="TebLocalPlannerROS/gap_boundary_exponent" value="$(arg gap_boundary_exponent)"/>
      <param name="TebLocalPlannerROS/feasibility_check_no_tebs" value="$(arg feasibility_check_no_tebs)"/>
      <param name="TebLocalPlannerROS/gap_theta_start" value="3.15"/>
      <param name="TebLocalPlannerROS/feasibility_check_no_poses" value="$(arg feasibility_check_no_poses)"/>
      <param name="planner_frequency" value="$(arg global_planning_freq)"/>
      <param name="TebLocalPlannerROS/gap_boundary_threshold" value="$(arg gap_boundary_threshold)"/>
      <param name="TebLocalPlannerROS/gap_boundary_ratio" value="$(arg gap_boundary_ratio)"/>
      
      <!-- Disable the local costmap observation sources if they will not be used -->
      <param name="local_costmap/obstacle_layer/observation_sources" value="false"/>
      <remap from="cmd_vel" to="navigation_velocity_smoother/raw_cmd_vel"/>
  </node>





</launch>
